"""Subclass of MainFrame, which is generated by wxFormBuilder."""

import wx
import PIL
from PIL import Image
import lc_gui
from wx._gdi import Colour

# Implementing MainFrame
class LCMainFrame( lc_gui.MainFrame ):
    # x and y coordiantes for the middle of canvas for drawing LC layers
    
    # How much the LC layer would be rotated in 'off state'
    maxRotationAngle = 115
    
    def __init__( self, parent ):
        lc_gui.MainFrame.__init__( self, parent )

        self.color = wx.Colour(128, 128, 128, 0)
        self.colorPickerFinal = wx.ColourPickerCtrl( self, wx.ID_ANY, wx.BLACK, wx.DefaultPosition, wx.DefaultSize, wx.CLRP_DEFAULT_STYLE )
        self.colorPickerFinal.Hide()
        self.colorPickerFinal.SetColour(self.color)
        
        self.canvasLCSize = self.panelLayersRed.GetClientSize();
        self.canvasLCMiddleX = self.canvasLCSize.width / 2
        self.canvasLCMiddleY = self.canvasLCSize.height / 2
        
        #print("panel size: " + str(self.canvasLCMiddleX) + ", " + str(self.canvasLCMiddleY))
         
        self.initLayers()            
    
    def initLayers(self):
        ###### inicializace a nacteni obrazku
                
        self.plrsttcver = Image.open("data/static_pol_vertical.png")
        self.plrsttcver.convert('RGBA')
        self.plrsttchor = Image.open("data/static_pol_horizontal.png")
        self.plrsttchor.convert('RGBA')
        self.plr = Image.open("data/polarizator.png")
        self.plr.convert('RGBA')
        self.bulb = Image.open("data/bulb.png")
        self.bulb.convert('RGBA')
                
        self.fltred = Image.open("data/color_filter_red.png")
        self.fltred.convert('RGBA')        
        self.fltgreen = Image.open("data/color_filter_green.png")
        self.fltgreen.convert('RGBA')        
        self.fltblue = Image.open("data/color_filter_blue.png")
        self.fltblue.convert('RGBA')
        
        self.polarizatorRedPaint()
        self.polarizatorGreenPaint()
        self.polarizatorBluePaint()
        
        ###################### konverze z pillow do wx
        # img = wx.EmptyImage(self.polarizatorCanvas.size[0],self.polarizatorCanvas.size[1])
        # img.SetData(canvas.convert("RGB").tostring())
        # img.SetAlphaData(canvas.convert("RGBA").tostring()[3::4])
        ######################
        # wx.StaticBitmap(self.panelLayersRed, -1, img.ConvertToBitmap(), (0, 0), (300, 200))
        # wx.StaticBitmap(self.panelLayersGreen, -1, img.ConvertToBitmap(), (0, 0), (300, 200))
        # wx.StaticBitmap(self.panelLayersBlue, -1, img.ConvertToBitmap(), (0, 0), (300, 200))

##### otaceni cervenych polarizatoru    
    def polarizatorRedPaint(self):
    
            konecne_otoceni = int(self.sliderValueRed.Value/100.0 * self.maxRotationAngle)
            background = Image.new("RGBA", (600, 200),(0,0,0,0))
            
            posX = 30            
            posY = self.canvasLCMiddleY - self.bulb.size[1] / 2 - 10                                   
            background.paste(self.bulb,(posX,posY,self.bulb.size[0]+posX,self.bulb.size[1]+posY),self.bulb)
            
            posX += 50            
            posY -= 15                     
            background.paste(self.fltred,(posX,posY,self.fltred.size[0]+posX,self.fltred.size[1]+posY),self.fltred)
            
            posX += 40
            posY -= 15            
            background.paste(self.plrsttcver,(posX,posY,self.plrsttcver.size[0]+posX,self.plrsttcver.size[1]+posY),self.plrsttcver)
            
            posX += 50
            posY += 20
            
            #i = konecne_otoceni/10.0
            i = 0.0
            for j in range(9):
                rot = self.plr.rotate( i , PIL.Image.BILINEAR)
                background.paste(rot,(posX, posY, rot.size[0]+posX, rot.size[1]+posY), rot)
                i += konecne_otoceni/10.0
                posX += 25
                posY += 3
            
            posX += 10
            posY -= 25 
            #rot = self.plrsttcver.transpose(Image.ROTATE_90)
            background.paste(self.plrsttchor,(posX, posY, self.plrsttchor.size[0]+posX, self.plrsttchor.size[1]+posY), self.plrsttchor)
            
            img = wx.EmptyImage(background.size[0],background.size[1])
            img.SetData(background.convert("RGB").tostring())
            img.SetAlphaData(background.convert("RGBA").tostring()[3::4])
            wx.StaticBitmap(self.panelLayersRed, -1, img.ConvertToBitmap(), (0, 0), (background.size[0],background.size[1]))
            self.panelLayersRed.Refresh()           
##### otaceni zelenych polarizatoru    
    def polarizatorGreenPaint(self):
            
            konecne_otoceni = int(self.sliderValueGreen.Value/100.0 * self.maxRotationAngle)
            background = Image.new("RGBA", (600, 200),(0,0,0,0))
            
            posX = 30          
            posY = self.canvasLCMiddleY - self.bulb.size[1] / 2 - 10                                   
            background.paste(self.bulb,(posX,posY,self.bulb.size[0]+posX,self.bulb.size[1]+posY),self.bulb)
            
            posX += 50            
            posY -= 15                       
            background.paste(self.fltgreen,(posX,posY,self.fltgreen.size[0]+posX,self.fltred.size[1]+posY),self.fltgreen)
            
            posX += 40
            posY -= 15            
            background.paste(self.plrsttcver,(posX,posY,self.plrsttcver.size[0]+posX,self.plrsttcver.size[1]+posY),self.plrsttcver)
            
            posX += 50
            posY += 20
            
            #i = konecne_otoceni/10.0
            i = 0.0
            for j in range(9):
                rot = self.plr.rotate( i , PIL.Image.BILINEAR)
                background.paste(rot,(posX, posY, rot.size[0]+posX, rot.size[1]+posY), rot)
                i += konecne_otoceni/10.0
                posX += 25
                posY += 3
            
            posX += 10
            posY -= 25
            #rot = self.plrsttcver.transpose(Image.ROTATE_90)
            background.paste(self.plrsttchor,(posX, posY, self.plrsttchor.size[0]+posX, self.plrsttchor.size[1]+posY), self.plrsttchor)
            
            img = wx.EmptyImage(background.size[0],background.size[1])
            img.SetData(background.convert("RGB").tostring())
            img.SetAlphaData(background.convert("RGBA").tostring()[3::4])
            wx.StaticBitmap(self.panelLayersGreen, -1, img.ConvertToBitmap(), (0, 0), (background.size[0],background.size[1]))
            self.panelLayersGreen.Refresh()
##### otaceni modrych polarizatoru    
    def polarizatorBluePaint(self):
            
            konecne_otoceni = int(self.sliderValueBlue.Value/100.0 * self.maxRotationAngle)
            background = Image.new("RGBA", (600, 200),(0,0,0,0))
            
            posX = 30      
            posY = self.canvasLCMiddleY - self.bulb.size[1] / 2 - 10                                   
            background.paste(self.bulb,(posX,posY,self.bulb.size[0]+posX,self.bulb.size[1]+posY),self.bulb)
            
            posX += 50            
            posY -= 15
            background.paste(self.fltblue,(posX,posY,self.fltblue.size[0]+posX,self.fltred.size[1]+posY),self.fltblue)
            
            posX += 40
            posY -= 15            
            background.paste(self.plrsttcver,(posX,posY,self.plrsttcver.size[0]+posX,self.plrsttcver.size[1]+posY),self.plrsttcver)
            
            posX += 50
            posY += 20
            
            #i = konecne_otoceni/10.0
            i = 0.0
            for j in range(9):
                rot = self.plr.rotate( i , PIL.Image.BILINEAR)
                background.paste(rot,(posX, posY, rot.size[0]+posX, rot.size[1]+posY), rot)
                i += konecne_otoceni/10.0
                posX += 25
                posY += 3
            
            posX += 10
            posY -= 25
            #rot = self.plrsttcver.transpose(Image.ROTATE_90)
            background.paste(self.plrsttchor,(posX, posY, self.plrsttchor.size[0]+posX, self.plrsttchor.size[1]+posY), self.plrsttchor)
            
            img = wx.EmptyImage(background.size[0],background.size[1])
            img.SetData(background.convert("RGB").tostring())
            img.SetAlphaData(background.convert("RGBA").tostring()[3::4])
            wx.StaticBitmap(self.panelLayersBlue, -1, img.ConvertToBitmap(), (0, 0), (background.size[0],background.size[1]))
            self.panelLayersBlue.Refresh()
        
    def refreshResult(self, col):
        self.panelResultColors.rectColor.Set(col.Red(),col.Green(),col.Blue())
        self.panelResultColors.drawResult()
        self.panelResultColors.Refresh()
        
##### Ovladani cerveneho kanalu
    def sliderValueRedChanged( self, event ): 
        self.textValueRed.Value = str(self.sliderValueRed.Value/100.0)         
        if self.sliderVoltageRed.Value != 100-self.sliderValueRed.Value: 
            self.sliderVoltageRed.Value = 100-self.sliderValueRed.Value 
            self.textVoltageRed.Value = str(self.sliderVoltageRed.Value/100.0)         
        self.colorPickerFinal.SetColour(wx.Colour(self.sliderValueRed.Value*255/100,self.sliderValueGreen.Value*255/100,self.sliderValueBlue.Value*255/100)) 
        self.refreshResult(self.colorPickerFinal.GetColour())         
        self.polarizatorRedPaint() 
         
    def textValueRedChanged( self, event ): 
        self.sliderValueRed.Value = int(float(self.textValueRed.Value)*100)        
        if self.sliderVoltageRed.Value != 100-self.sliderValueRed.Value: 
            self.sliderVoltageRed.Value = 100-self.sliderValueRed.Value 
            self.textVoltageRed.Value = str(self.sliderVoltageRed.Value/100.0)         
        self.colorPickerFinal.SetColour(wx.Colour(self.sliderValueRed.Value*255/100,self.sliderValueGreen.Value*255/100,self.sliderValueBlue.Value*255/100)) 
        self.refreshResult(self.colorPickerFinal.GetColour())         
        self.polarizatorRedPaint() 

    def sliderVoltageRedChanged( self, event ):
        self.textVoltageRed.Value = str(float(self.sliderVoltageRed.Value)/100)
        if self.sliderValueRed.Value != 100-self.sliderVoltageRed.Value:
            self.sliderValueRed.Value = 100-self.sliderVoltageRed.Value
            self.textValueRed.Value = str(self.sliderValueRed.Value)
        self.colorPickerFinal.SetColour(wx.Colour(self.sliderValueRed.Value*255/100,self.sliderValueGreen.Value*255/100,self.sliderValueBlue.Value*255/100))
        self.refreshResult(self.colorPickerFinal.GetColour())
        self.polarizatorRedPaint()
        
    def textVoltageRedChanged( self, event ):
        self.sliderVoltageRed.Value = int(float(self.textVoltageRed.Value)*100)
        if self.sliderValueRed.Value != 100-self.sliderVoltageRed.Value:
            self.sliderValueRed.Value = 100-self.sliderVoltageRed.Value
            self.textValueRed.Value = str(self.sliderValueRed.Value)
        self.colorPickerFinal.SetColour(wx.Colour(self.sliderValueRed.Value*255/100,self.sliderValueGreen.Value*255/100,self.sliderValueBlue.Value*255/100))
        self.refreshResult(self.colorPickerFinal.GetColour())
        self.polarizatorRedPaint()
        
##### ^^^^^^^^
##### Ovladani zeleneho kanalu
    def sliderValueGreenChanged( self, event ): 
        self.textValueGreen.Value = str(self.sliderValueGreen.Value/100.0)         
        if self.sliderVoltageGreen.Value != 100-self.sliderValueGreen.Value: 
            self.sliderVoltageGreen.Value = 100-self.sliderValueGreen.Value 
            self.textVoltageGreen.Value = str(self.sliderVoltageGreen.Value/100.0)         
        self.colorPickerFinal.SetColour(wx.Colour(self.sliderValueRed.Value*255/100,self.sliderValueGreen.Value*255/100,self.sliderValueBlue.Value*255/100)) 
        self.refreshResult(self.colorPickerFinal.GetColour())         
        self.polarizatorGreenPaint() 
         
    def textValueGreenChanged( self, event ): 
        self.sliderValueGreen.Value = int(float(self.textValueGreen.Value)*100)        
        if self.sliderVoltageGreen.Value != 100-self.sliderValueGreen.Value: 
            self.sliderVoltageGreen.Value = 100-self.sliderValueGreen.Value 
            self.textVoltageGreen.Value = str(self.sliderVoltageGreen.Value/100.0)         
        self.colorPickerFinal.SetColour(wx.Colour(self.sliderValueRed.Value*255/100,self.sliderValueGreen.Value*255/100,self.sliderValueBlue.Value*255/100)) 
        self.refreshResult(self.colorPickerFinal.GetColour())         
        self.polarizatorGreenPaint() 

    def sliderVoltageGreenChanged( self, event ):
        self.textVoltageGreen.Value = str(float(self.sliderVoltageGreen.Value)/100)
        if self.sliderValueGreen.Value != 100-self.sliderVoltageGreen.Value:
            self.sliderValueGreen.Value = 100-self.sliderVoltageGreen.Value
            self.textValueGreen.Value = str(self.sliderValueGreen.Value)
        self.colorPickerFinal.SetColour(wx.Colour(self.sliderValueRed.Value*255/100,self.sliderValueGreen.Value*255/100,self.sliderValueBlue.Value*255/100))
        self.refreshResult(self.colorPickerFinal.GetColour())
        self.polarizatorGreenPaint()
        
    def textVoltageGreenChanged( self, event ):
        self.sliderVoltageGreen.Value = int(float(self.textVoltageGreen.Value)*100)
        if self.sliderValueGreen.Value != 100-self.sliderVoltageGreen.Value:
            self.sliderValueGreen.Value = 100-self.sliderVoltageGreen.Value
            self.textValueGreen.Value = str(self.sliderValueGreen.Value)
        self.colorPickerFinal.SetColour(wx.Colour(self.sliderValueRed.Value*255/100,self.sliderValueGreen.Value*255/100,self.sliderValueBlue.Value*255/100))
        self.refreshResult(self.colorPickerFinal.GetColour())
        self.polarizatorGreenPaint()

##### ^^^^^^^
##### Ovladani modreho kanalu
    def sliderValueBlueChanged( self, event ): 
        self.textValueBlue.Value = str(self.sliderValueBlue.Value/100.0)         
        if self.sliderVoltageBlue.Value != 100-self.sliderValueBlue.Value: 
            self.sliderVoltageBlue.Value = 100-self.sliderValueBlue.Value 
            self.textVoltageBlue.Value = str(self.sliderVoltageBlue.Value/100.0)         
        self.colorPickerFinal.SetColour(wx.Colour(self.sliderValueRed.Value*255/100,self.sliderValueGreen.Value*255/100,self.sliderValueBlue.Value*255/100)) 
        self.refreshResult(self.colorPickerFinal.GetColour())         
        self.polarizatorBluePaint() 
         
    def textValueBlueChanged( self, event ): 
        self.sliderValueBlue.Value = int(float(self.textValueBlue.Value)*100)        
        if self.sliderVoltageBlue.Value != 100-self.sliderValueBlue.Value: 
            self.sliderVoltageBlue.Value = 100-self.sliderValueBlue.Value 
            self.textVoltageBlue.Value = str(self.sliderVoltageBlue.Value/100.0)         
        self.colorPickerFinal.SetColour(wx.Colour(self.sliderValueRed.Value*255/100,self.sliderValueGreen.Value*255/100,self.sliderValueBlue.Value*255/100)) 
        self.refreshResult(self.colorPickerFinal.GetColour())         
        self.polarizatorBluePaint() 

    def sliderVoltageBlueChanged( self, event ):
        self.textVoltageBlue.Value = str(float(self.sliderVoltageBlue.Value)/100)
        if self.sliderValueBlue.Value != 100-self.sliderVoltageBlue.Value:
            self.sliderValueBlue.Value = 100-self.sliderVoltageBlue.Value
            self.textValueBlue.Value = str(self.sliderValueBlue.Value)
        self.colorPickerFinal.SetColour(wx.Colour(self.sliderValueRed.Value*255/100,self.sliderValueGreen.Value*255/100,self.sliderValueBlue.Value*255/100))
        self.refreshResult(self.colorPickerFinal.GetColour())
        self.polarizatorBluePaint()
        
    def textVoltageBlueChanged( self, event ):
        self.sliderVoltageBlue.Value = int(float(self.textVoltageBlue.Value)*100)
        if self.sliderValueBlue.Value != 100-self.sliderVoltageBlue.Value:
            self.sliderValueBlue.Value = 100-self.sliderVoltageBlue.Value
            self.textValueBlue.Value = str(self.sliderValueBlue.Value)
        self.colorPickerFinal.SetColour(wx.Colour(self.sliderValueRed.Value*255/100,self.sliderValueGreen.Value*255/100,self.sliderValueBlue.Value*255/100))
        self.refreshResult(self.colorPickerFinal.GetColour())
        self.polarizatorBluePaint()
        
##### ^^^^^^^           
##### barva colorPickeru se zmenila tak si nastavime vsechno okolo
    def colorPickerChanged( self, event=0 ):        
        col = self.colorPickerFinal.GetColour()        
        self.sliderValueRed.Value = col.Red()/255.0*100.0
        self.sliderValueGreen.Value = col.Green()/255.0*100.0
        self.sliderValueBlue.Value = col.Blue()/255.0*100.0
        self.sliderValueRedChanged(event)
        self.sliderValueGreenChanged(event)
        self.sliderValueBlueChanged(event)
#####

    def OnPaintResult(self, evt):
        # just becaues stupid wx needs it unnecasarily... 
        #(it would generate endless stream of PAINT_EVT)
        nonsense = wx.PaintDC(self.panelResultColors)
        
        dc = wx.BufferedPaintDC(self.panelResultColors)
    
        bg = wx.Brush(wx.Colour(255,255,255,0))
        dc.SetBackground(bg)
        dc.Clear()
                
        self.panelResultColors.pdc.DrawToDC(dc)            
        
        # debug
#         print "kreslim"
        
    def OnMouse(self, event):        
        hitradius = 5 
        if event.LeftDown():
            (x,y) = event.GetPositionTuple()
            
            # debug            
#             print "jsem v on mouse: ", x, y
            
            l = self.panelResultColors.pdc.FindObjects(x, y, hitradius)
            for id in l:
#                 print "je tam: ", x, y
                
                dlg = wx.ColourDialog(self)
                
                # Ensure the full colour dialog is displayed, 
                # not the abbreviated version.
                dlg.GetColourData().SetChooseFull(True)
                
                if dlg.ShowModal() == wx.ID_OK:
                    data = dlg.GetColourData()
#                     print 'You selected: %s\n' % str(data.GetColour().Get())
                    self.panelResultColors.rectColor = data.GetColour()
                    self.panelResultColors.drawResult()
                    self.panelResultColors.Refresh()
                    #cpe = wx.ColourPickerEvent(wx.EVT_PAINT,0,0)
#                     cpe.SetColour(self.rectColor)
                    self.colorPickerFinal.SetColour(data.GetColour())
                    self.colorPickerChanged()
                dlg.Destroy()
            
            
## Main program starts here ##  
if __name__ == "__main__":
    app = wx.App(False)

    frame = LCMainFrame(None)   
    frame.Show()
    
    app.MainLoop()